<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOkOAADpDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZAAAAvAAAAPcAAAD/AAAA/QAA
        AOkAAAB/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUwAAAOQAAADjAAAAUQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALQAAAO0AAADyAAAAewAA
        ADIAAABJAAAArAAAAP4AAACjAAAABQAAAAAAAAAAAAAAAAAAAAcAAADzAAAARQAAAEcAAADyAAAABwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMAAADjAAAApgAA
        ALEAAAAAAAAAAAAAAAAAAAAYAAAA/AAAAMUAAACPAAAAAAAAAAAAAAAAAAAAFAAAAPsAAAAgAAAAFQAA
        APkAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAAADAAAAABAAAAAAAAAAAAAAAAAAAAiQAA
        AKcAAAAkAAAA7gAAAM8AAADMAAAAzAAAAOAAAACuAAAAGwAAAPEAAAAlAAAABwAAAGYAAADdAAAA6gAA
        AO0AAADrAAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG0AAADwAAAA5QAAAKsAAAABAAAAAAAA
        AAAAAADgAAAAOAAAAAAAAAAWAAAAQwAAAEQAAABEAAAAOQAAAAMAAAAAAAAAowAAALMAAADkAAAAxwAA
        AE0AAAABAAAAKgAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6wAAADIAAAAJAAAA8QAA
        ALoAAACqAAAArQAAAP8AAAAKAAAAAAAAAAAAAAAzAAAAmQAAAH0AAAALAAAAAAAAAAAAAACUAAAA5AAA
        AEMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADaAAAAYgAA
        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
        jgD58wYf8fEmf+D5BH/g+ID/4PwB//D+A/8=
</value>
  </data>
</root>