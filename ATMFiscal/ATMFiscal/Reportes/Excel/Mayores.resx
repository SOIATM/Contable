<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TemaGeneral.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>266, 56</value>
  </metadata>
  <metadata name="TemaBotones.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>389, 56</value>
  </metadata>
  <metadata name="Ayuda.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>515, 56</value>
  </metadata>
  <metadata name="Cta.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Cuent.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Desc.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Naturaleza.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="M.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Deb.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Hab.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Saldo.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOkOAADpDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAACUAAADXAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAA
        AO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA1wAA
        ACQAAAAAAAAAAAAAAAAAAAAAAAAAhwAAAHcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB3AAAAhgAAAAAAAAAAAAAAAAAAAAAAAACQAAAAXwAAAAAAAAADAAAAHwAAACIAAAAiAAAAIgAA
        ACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAABgAAAAAAAAAFgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAA
        AB8AAAADAAAAAAAAAF8AAACQAAAAAAAAAAAAAAAAAAAAAAAAAJAAAABfAAAAAAAAALsAAADTAAAAzAAA
        AMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAwQAAAAIAAAC5AAAAzAAAAMwAAADMAAAAzAAA
        AMwAAADMAAAA0wAAALoAAAAAAAAAXwAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAF8AAAAAAAAA7wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA7wAAAAAAAABfAAAAkAAAAAAAAAAAAAAAAAAAAAAAAACQAAAAXwAA
        AAAAAADvAAAAAAAAACkAAACIAAAAiAAAAIgAAACIAAAAiAAAAGIAAAAAAAAAAAAAAAAAAAAAAAAAYwAA
        AIgAAACIAAAAiAAAAIgAAACIAAAAKQAAAAAAAADvAAAAAAAAAF8AAACQAAAAAAAAAAAAAAAAAAAAAAAA
        AJAAAABfAAAAAAAAAO8AAAAAAAAAHwAAAGYAAABmAAAAZgAAAGYAAABmAAAASgAAAAAAAAAAAAAAAAAA
        AAAAAABKAAAAZgAAAGYAAABmAAAAZgAAAGYAAAAfAAAAAAAAAO8AAAAAAAAAXwAAAJAAAAAAAAAAAAAA
        AAAAAAAAAAAAkAAAAF8AAAAAAAAA7wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7wAAAAAAAABfAAAAkAAA
        AAAAAAAAAAAAAAAAAAAAAACQAAAAXwAAAAAAAADvAAAAAAAAAEgAAADuAAAA7gAAAO4AAADuAAAA7gAA
        AK0AAAAAAAAAAAAAAAAAAAAAAAAArQAAAO4AAADuAAAA7gAAAO4AAADuAAAARwAAAAAAAADvAAAAAAAA
        AF8AAACQAAAAAAAAAAAAAAAAAAAAAAAAAJAAAABfAAAAAAAAAO8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AO8AAAAAAAAAXwAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAF8AAAAAAAAA7wAAAAAAAAArAAAAiAAA
        AIgAAACIAAAAiAAAAIgAAABlAAAAAAAAAAAAAAAAAAAAAAAAAGUAAACIAAAAiAAAAIgAAACIAAAAiAAA
        ACsAAAAAAAAA7wAAAAAAAABfAAAAkAAAAAAAAAAAAAAAAAAAAAAAAACQAAAAXwAAAAAAAADvAAAAAAAA
        AB0AAABmAAAAZgAAAGYAAABmAAAAZgAAAEgAAAAAAAAAAAAAAAAAAAAAAAAASQAAAGYAAABmAAAAZgAA
        AGYAAABmAAAAHQAAAAAAAADvAAAAAAAAAF8AAACQAAAAAAAAAAAAAAAAAAAAAAAAAJAAAABfAAAAAAAA
        AO8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        B9PL/D/Ty///08vwD9PL8A/Ty+PH08AAAAM=
</value>
  </data>
</root>