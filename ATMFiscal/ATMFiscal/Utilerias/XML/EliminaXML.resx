<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TemaGeneral.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAAALZJREFUWEftl0EOgjAQRbvwDJ4MD+EpdMm91L33cSH/Y2qMGdqC/JHFvOQllNjO
        CyYaErjBp8grrGJtXNMqzR+cSQQ0EwERoA7Yw+Pr0kYZsIN3yPPPvGGhfgIdfEDO6HnjG3UAKUZ4BJDJ
        CK8AYkYsDcj7fnGMyIu5fB601BN8Lzw4wPwVjMOJV4A5nHgETA4n6oDicKIM2MRP8V//jJqIgAhQBTSf
        u5kAlVX4Cm1tXMMLLJDSADVT3Y5lgfQ6AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="Verif.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="UUI.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Imp.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Ref.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Id.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Ayuda.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>103, 17</value>
  </metadata>
  <metadata name="TemaBotones.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>289, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOkOAADpDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAACVAAAAzAAAAMwAAABFAAAARwAAAMwAAADMAAAAzAAA
        AMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADKAAAAgQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAAALgAAAAkAAAAIgAAAAQAAAAFAAAAIgAA
        ACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACcAAADQAAAAMwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlAAAAigAAAAAAAAAAAAAACQAA
        AFsAAAAAAAAAJQAAAD4AAABcAAAABQAAAAAAAABHAAAAGgAAAGIAAAB3AAAAdQAAAAMAAAAAAAAAAAAA
        AKoAAABFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGUAAACKAAAAAAAA
        AAAAAAAGAAAA1QAAADIAAAC7AAAAVQAAANgAAAAUAAAAAAAAAKYAAABFAAAA3wAAAF0AAABQAAAAAQAA
        AAAAAAAAAAAAqgAAAEUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZQAA
        AIoAAAAAAAAAAAAAAAAAAABCAAAA4gAAALcAAAAAAAAA2AAAAEAAAAB8AAAApgAAAEUAAADfAAAADAAA
        AAAAAAAAAAAAAAAAAAAAAACqAAAARQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABlAAAAigAAAAAAAAAAAAAAAAAAACUAAAD0AAAAlgAAAAAAAADYAAAAxwAAAOcAAADPAAAARQAA
        AN8AAAAMAAAAAAAAAAAAAAAAAAAAAAAAAKoAAABFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAGUAAACKAAAAAAAAAAAAAAAAAAAAtAAAAFsAAADXAAAAMAAAANgAAAC4AAAAUAAA
        AP8AAABFAAAA3wAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAqgAAAEUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAdwAAAIoAAAAAAAAAAAAAAAoAAACSAAAAAQAAAEYAAABZAAAAhAAA
        ACcAAAAAAAAAiQAAACMAAACOAAAABQAAAAAAAAAAAAAAAAAAAAAAAACqAAAAVwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAADpAAAAlQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALUAAADUAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjAAAAJ8AAADfAAAAzgAAAMwAAADMAAAAzAAA
        AMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADSAAAA0QAA
        ALAAAABtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYAAADhAAAADQAAALEAAABvAAAAIgAA
        ACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAA
        AIoAAACSAAAAHgAAAOQAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtAAAAGEAAABDAAAAzgAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAACgAAAN4AAAAtAAAAgQAAAJMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAADNAAAABgAA
        ANIAAAA+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAXAAAALwAAAAJAAAA3QAAAC0AAAAAAAAAAAAAAAAAAAAEAAAA0wAA
        AD0AAABtAAAApwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAwwAAAE0AAABaAAAAvQAAAAAAAAAAAAAAAAAA
        AHAAAAClAAAAEQAAAOMAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAewAAANsAAABjAAAAAAAA
        AAAAAAB+AAAA2wAAAGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAAAA2gAAAAgAAADCAAAATwAA
        AAAAAAASAAAA4wAAAB8AAACUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIcAAADAAAAAPwAA
        ANYAAAAAAAAAAAAAAPMAAAAuAAAA1AAAAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAdAAA
        ADIAAADbAAAABwAAAJYAAAB+AAAAKgAAAN8AAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHAAAAwAAA
        ABkAAADHAAAAcgAAAAAAAAAAAAAAkgAAALAAAAARAAAAGwAAAE4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABcAAADkAAAAGQAAAJ4AAAB2AAAA7wAAAAkAAACfAAAAagAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZAAA
        AMMAAAAZAAAAxgAAAH0AAAAAAAAAAAAAAAAAAAACAAAAmwAAAK8AAAAWAAAA1gAAAEQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAIoAAAB+AAAAHwAAANwAAADBAAAAUAAAAFYAAAC4AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACrAAAATAAAAHsAAADGAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAGAAAA4AAAAFsAAABzAAAAigAA
        AAAAAAAAAAAAAAAAAAAAAAAGAAAA1wAAADgAAABwAAAAoQAAADMAAADaAAAACAAAADsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAFkAAADNAAAAGgAAALkAAACQAAAAAQAAAAAAAAAAAAAABQAAAKwAAACfAAAAIQAA
        ANwAAAA7AAAAAAAAAAAAAAAAAAAAAAAAAHIAAACiAAAAFAAAAOQAAAAcAAAAAAAAAJ0AAAB3AAAAAAAA
        AHkAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAHQAAADNAAAAGgAAALkAAACEAAAAAAAAAAAAAAClAAAAoAAA
        ACEAAADbAAAAVwAAAAAAAAAAAAAAAAAAAAAAAAAWAAAA5AAAABsAAACXAAAAfQAAAAAAAAAAAAAAGAAA
        AOQAAAAYAAAAmgAAAHoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAAADNAAAANwAAAOYAAAAAAAAACQAA
        APMAAAAxAAAA2wAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkAAAB7AAAALgAAAN0AAAAJAAAAAAAA
        AAAAAAAAAAAAdwAAAJ0AAAAWAAAA5AAAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAADYAAAAbwAA
        AAAAAAAAAAAAiQAAANYAAABTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAA3wAAAAoAAAC6AAAAVgAA
        AAAAAAAAAAAAAAAAAAAAAAAGAAAA2AAAADUAAAB0AAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAABUAAAAUgAA
        AMUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAxgAAAAcAAADXAAAANgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVAAAAwwAA
        AAcAAADZAAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4AAAAWQAAAE0AAADHAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAA
        AN0AAAAzAAAAegAAAJoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoAAADfAAAACwAA
        ALcAAABcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB9AAAAmAAAABcAAADkAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AJQAAACAAAAAKQAAAN8AAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAGwAAAOYAAAAYAAAAoQAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAEgAAAOMAAAAeAAAAkQAAAJwAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAA
        AFUAAABVAAAAVQAAAFUAAACyAAAAcQAAADcAAADYAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAKgAAAAOAAAAjAAAAJkAAACZAAAAmQAAAJkAAACZAAAAmQAA
        AJkAAACZAAAAmQAAAJkAAACZAAAAmQAAAIMAAAAGAAAAxwAAAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAA0wAAAGYAAABEAAAARAAAAEQAAABEAAAARAAA
        AEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAHwAAAC4AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAogAAAKoAAACqAAAAqgAA
        AKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAnQAAABoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+AAAP/gAAB/5kIGf+YCBn/nEB5/5xAef+cAHn/mAh5/x//+P8AAAD+AA
        AAfg//8Hwf//g4P//4OD8Y/BB+GH4AfBg+APg4HwD4PB4A+BgeCTwYPBg+EHwcHxj4PB//+D4P//B/B/
        /g/wf/4P+D/8H/gAAB/8AAA//AAAf/4AAH8=
</value>
  </data>
</root>