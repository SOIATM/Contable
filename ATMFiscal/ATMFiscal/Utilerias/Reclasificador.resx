<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOkOAADpDgAAAAAAAAAA
        AAAAAAAAAAAAgAAAAPAAAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAOMAAAANAAAAAAAA
        AEkAAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAA
        APAAAAB/AAAAAAAAAAAAAADqAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADQAAAOkAAAAAAAAAAAAAAO4AAAACAAAAFAAAALgAAAC7AAAAuwAAALsAAAC7AAAAuwAA
        ALsAAAC7AAAAuwAAALsAAAC7AAAAuwAAALsAAAC7AAAAuwAAALsAAAC7AAAAuwAAALsAAAC7AAAAuwAA
        ALsAAAC7AAAAuAAAABQAAAACAAAA7gAAAAAAAAAAAAAA7gAAAAIAAAArAAAA0QAAADMAAAAzAAAAMwAA
        ADMAAABzAAAAswAAADMAAAAzAAAAMwAAADMAAACTAAAAkwAAADMAAAAzAAAAMwAAADMAAACzAAAAcwAA
        ADMAAAAzAAAAMwAAADMAAADRAAAAKwAAAAIAAADuAAAAAAAAAAAAAADuAAAAAgAAACsAAADFAAAAAAAA
        AAAAAAAAAAAAAAAAAFAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAHgAAAB4AAAAAAAAAAAAAAAAAAAAAAAA
        AKAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAMUAAAArAAAAAgAAAO4AAAAAAAAAAAAAAO4AAAACAAAAKwAA
        AMUAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAHgAAAAAAAAAAAAA
        AAAAAAAAAAAAoAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAxQAAACsAAAACAAAA7gAAAAAAAAAAAAAA7gAA
        AAIAAAArAAAAxQAAAAAAAAAAAAAAAAAAAAAAAABQAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAB4AAAAeAAA
        AAAAAAAAAAAAAAAAAAAAAACgAAAAUAAAAAAAAAAAAAAAAAAAAAAAAADFAAAAKwAAAAIAAADuAAAAAAAA
        AAAAAADuAAAAAgAAACsAAADFAAAAAAAAAAAAAAAAAAAAAAAAAFAAAACgAAAAAAAAAAAAAAAAAAAAAAAA
        AHgAAAB4AAAAAAAAAAAAAAAAAAAAAAAAAKAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAMUAAAArAAAAAgAA
        AO4AAAAAAAAAAAAAAO4AAAACAAAAKwAAAMUAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAKAAAAAAAAAAAAAA
        AAAAAAAAAAAAeAAAAHgAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAxQAA
        ACsAAAACAAAA7gAAAAAAAAAAAAAA7gAAAAIAAAArAAAAxQAAAAAAAAAAAAAAAAAAAAAAAABQAAAAoAAA
        AAAAAAAAAAAAAAAAAAAAAAB4AAAAeAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAUAAAAAAAAAAAAAAAAAAA
        AAAAAADFAAAAKwAAAAIAAADuAAAAAAAAAAAAAADuAAAAAgAAACsAAADJAAAAEQAAABEAAAARAAAAEQAA
        AFsAAACnAAAAEQAAABEAAAARAAAAEQAAAIEAAACBAAAAEQAAABEAAAARAAAAEQAAAKcAAABbAAAAEQAA
        ABEAAAARAAAAEQAAAMkAAAArAAAAAgAAAO4AAAAAAAAAAAAAAO4AAAACAAAAKwAAAPcAAADdAAAA3QAA
        AN0AAADdAAAA6AAAAPIAAADdAAAA3QAAAN0AAADdAAAA7QAAAO0AAADdAAAA3QAAAN0AAADdAAAA8gAA
        AOgAAADdAAAA3QAAAN0AAADdAAAA9wAAACsAAAACAAAA7gAAAAAAAAAAAAAA7gAAAAIAAAArAAAAxQAA
        AAAAAAAAAAAAAAAAAAAAAABQAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAB4AAAAeAAAAAAAAAAAAAAAAAAA
        AAAAAACgAAAAUAAAAAAAAAAAAAAAAAAAAAAAAADFAAAAKwAAAAIAAADuAAAAAAAAAAAAAADuAAAAAgAA
        ACYAAADwAAAAuwAAALsAAAC7AAAAuwAAANAAAADmAAAAuwAAALsAAAC7AAAAuwAAANsAAADbAAAAuwAA
        ALsAAAC7AAAAuwAAAOYAAADQAAAAuwAAALsAAAC7AAAAuwAAAPAAAAAmAAAAAgAAAO4AAAAAAAAAAAAA
        AO4AAAACAAAAAQAAACwAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAA
        ADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAALAAAAAEAAAACAAAA7gAA
        AAAAAAAAAAAAygAAAJcAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAA
        AIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAA
        AJgAAADKAAAAAAAAAAAAAADKAAAAmAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAA
        AIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAA
        AIgAAACIAAAAmAAAAMkAAAAAAAAAAAAAAO4AAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAA7gAAAAAAAAAAAAAA7gAAAAIAAAAAAAAArAAAAMwAAADMAAAAzAAA
        AGsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAADuAAAAAAAAAAAAAADuAAAAAgAAAAAAAAAWAAAAIgAA
        ACIAAAAiAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAO4AAAAAAAAAAAAAAO4AAAACAAAAAAAA
        AEoAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHAAAAARAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAA7gAAAAAAAAAAAAAA7gAA
        AAIAAAAAAAAA6wAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAvgAA
        AGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAADuAAAAAAAA
        AAAAAADuAAAAAgAAAAAAAADvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACEAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AOwAAAAAAAAAAAAAAO4AAAACAAAAAAAAAOgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAA
        AIgAAACIAAAAiAAAAMYAAABjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAMgAAAAAAAAAAAAAA7gAAAAIAAAAAAAAAOQAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAA
        AGYAAABmAAAAZgAAAGYAAABmAAAAXgAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAAAAAgAAAAAAAAAmAAAAMwAAADMAAAAzAAAAMwAA
        ADMAAAAzAAAAMwAAADMAAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAAAAAAAAAAAAAAO4AAAACAAAAAAAAAJwAAAC7AAAAuwAA
        ALsAAAC7AAAAuwAAALsAAAC7AAAAuwAAAK0AAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAA6AAAAAAAAAAAAAAA7gAAAAIAAAAAAAAAngAA
        ALsAAAC7AAAAuwAAALsAAAC7AAAAuwAAADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAADuAAAAAAAAAAAAAADuAAAAAgAA
        AAAAAAAkAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAO4AAAAAAAAAAAAA
        AO4AAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAA7gAA
        AAAAAAAAAAAA6gAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA0AAADpAAAAAAAAAAAAAACCAAAA8AAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAA
        AO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAA
        AO4AAADuAAAA8AAAAIEAAAAAgAQAAZ////mAAAABgAAAAYeeeeGHnnnhh5554YeeeeGHnnnhh5554YAA
        AAGAAAABh5554YAAAAGAAAABgAAAAYAAAAGf///5kH//+ZB///mQAD/5kAA/+Zf/P/mQAD/9kAA//5AD
        //2QAf/5kA//+ZAP//mf///5n///+YAAAAE=
</value>
  </data>
</root>